List a = Nil | Cons { car :: a, cdr :: List a }

main :: Int
main = addXY { x = 1, y = 2 }

addXY :: { x :: Int, y :: Int } -> Int
addXY r = iAdd# r.x r.y

g :: forall a b. a -> { x :: a, y :: Int }
g x = { y = 1, x = x }

h :: forall a. a -> List a
h x = Cons { car = x, cdr = Cons { car = x, cdr = Nil } }

# a :: { x :: Int, y :: Bool }
a =
  if True
  then { x = 1, y = True }
  else { y = False, x = 2 }
